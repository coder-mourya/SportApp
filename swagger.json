{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Sports Nerve App"
  },
  "host": "petstore.swagger.io",
  "basePath": "/",
  "tags": [
    {
      "name": "Auth",
      "description": "Auth"
    },
    {
      "name": "User",
      "description": "User"
    },
    {
      "name": "Team",
      "description": "Team"
    },
    {
      "name": "User-Training",
      "description": "User-Training"
    },
    {
      "name": "Training-Booking",
      "description": "Training-Booking"
    },
    {
      "name": "Evaluation",
      "description": "Evaluation"
    },
    {
      "name": "Rating-Review",
      "description": "Rating-Review"
    },
    {
      "name": "Notifications",
      "description": "Notifications"
    },
    {
      "name": "Admin",
      "description": "Admin"
    },
    {
      "name": "User Management",
      "description": "User Management In Admin Panel"
    },
    {
      "name": "Facility Management",
      "description": "Facility Management In Admin Panel"
    },
    {
      "name": "Sports Management",
      "description": "Sports Management In Admin Panel"
    },
    {
      "name": "Coach Management",
      "description": "Caoch Management In Admin Panel"
    },
    {
      "name" : "Team Management",
      "description" : "Team Management In Amin Panel"
    },
    {
      "name" : "Training Management",
      "description" : "Training Management In Amin Panel"
    },
    {
      "name" : "Commission Management",
      "description" : "Commission Management In Amin Panel"
    },
    {
      "name" : "Content Management",
      "description" : "Content Management In Amin Panel"
    },
    {
      "name" : "Banner Management",
      "description" : "Banner Management In Amin Panel"
    },
    {
      "name" : "Promotion Management",
      "description" : "Promotion Management In Amin Panel"
    },
    {
      "name" : "Notification Management",
      "description" : "Notification Management In Amin Panel"
    },
    {
      "name" : "Support Management",
      "description" : "Support Management In Amin Panel"
    },
    {
      "name": "Dashboard Management",
      "description": "Dashboard Management In Admin Panel"
    }
  ],
  "schemes": ["http", "https"],
  "paths": {
    "/api/v1/auth/check_mobile_exists": {
      "post": {
        "tags": ["Auth"],
        "summary": "Check Mobile number already exists",
        "description": "Using this api we will check user mobile no exists or not, according these api response we will call login or signup api",
        "operationId": "check_mobile_exists",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "mobile",
            "in": "formData",
            "description": "Mobile Number",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "8196071707"
          },
          {
            "name": "countryCode",
            "in": "formData",
            "description": "Country code",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "+91"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/api/v1/auth/check_email_exists": {
      "post": {
        "tags": ["Auth"],
        "summary": "Check email address already exists",
        "description": "Using this api we will check user email address exists or not",
        "operationId": "check_email_exists",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Email address",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "tanya@mailinator.com"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/api/v1/auth/get/version": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get User App Version",
        "operationId": "version",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type (ios/android)",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "appType",
            "in": "query",
            "description": "App Type ( user/facility )",
            "required": true,
            "type": "string",
            "format": "String",
            "default": "user"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "description": "",
        "operationId": "login",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Email",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "tanya@mailinator.com"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Password",
            "required": true,
            "type": "string",
            "format": "String",
            "default": "12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User Register",
        "description": "",
        "operationId": "register",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "fullName",
            "in": "formData",
            "description": "Full Name",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Tanya Singh"
          },
          {
            "name": "mobile",
            "in": "formData",
            "description": "Mobile Number",
            "required": true,
            "type": "number",
            "format": "number",
            "default": "9690716309"
          },
          {
            "name": "countryCode",
            "in": "formData",
            "description": "Country Code",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "phoneCode",
            "in": "formData",
            "description": "Phone Code",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "phoneNumericCode",
            "in": "formData",
            "description": "Phone Numeric Code",
            "required": true,
            "type": "integer",
            "format": "integer"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "Enter email",
            "type": "string",
            "format": "string",
            "default": "tanya@gmail.com"
          },
          {
            "name": "gender",
            "enum": ["Male", "Female","Other"],
            "in": "formData",
            "description": "Gender",
            "default": "Female",
            "type": "string",
            "format": "Enum"
          },
          {
            "name": "dateOfBirth",
            "in": "formData",
            "description": "Date in YYYY-MM-DD format",
            "default": "1998-12-22",
            "type": "date",
            "format": "date"
          },
          {
            "name": "country",
            "in": "formData",
            "description": "Country Name",
            "required": true,
            "type": "string",
            "format": "String",
            "default": "India"
          },
          {
            "name": "state",
            "in": "formData",
            "description": "State Name",
            "type": "string",
            "format": "String",
            "default": "Uttar Pradesh"
          },
          {
            "name": "city",
            "in": "formData",
            "description": "City Name",
            "type": "string",
            "format": "String",
            "default": "Noida"
          },
          {
            "name": "userType",
            "enum": ["user","facility_admin","facility_manager","coach"],
            "in": "formData",
            "description": "Device Type",
            "required": true,
            "default": "user",
            "type": "string",
            "format": "Enum"
          },
          {
            "name": "deviceType",
            "enum": ["ios", "android"],
            "in": "formData",
            "description": "Device Type",
            "required": true,
            "default": "ios",
            "type": "string",
            "format": "Enum"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Password",
            "required": true,
            "type": "string",
            "format": "String",
            "default": "12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/api/v1/auth/sendLink": {
      "post": {
        "tags": ["Auth"],
        "summary": "Send Reset Password Link To User",
        "description": "",
        "operationId": "login",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Email",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "tanya@mailinator.com"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/api/v1/auth/send/mail-verification/link": {
      "post": {
        "tags": ["Auth"],
        "summary": "Send Email Verification Link To User",
        "description": "",
        "operationId": "send_mail_verification_link",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Email",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "tanya@mailinator.com"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/api/v1/auth/resend/mail-verification/link": {
      "post": {
        "tags": ["Auth"],
        "summary": "Resend Email Verification Link To User",
        "description": "",
        "operationId": "resend_link",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Email",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "tanya@mailinator.com"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/api/v1/auth/country_list": {
      "get": {
        "tags": ["Auth"],
        "summary": "Country list",
        "description": "Get Country List",
        "operationId": "country_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/api/v1/auth/state_list/{countryId}": {
      "get": {
        "tags": ["Auth"],
        "summary": "State list",
        "description": "Get States List Acc To Country Code",
        "operationId": "state_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "countryId", 
            "in": "path", 
            "required": true, 
            "description": "Get the list of states according to Country Id"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },

    "/api/v1/auth/city_list/{stateId}": {
      "get": {
        "tags": ["Auth"],
        "summary": "City list",
        "description": "Get City List Acc To Country Code And State Code",
        "operationId": "city_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "stateId", 
            "in": "path", 
            "required": true, 
            "description": "Get the list of cities according to State Id"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/api/v1/user/delete/account": {
      "delete": {
        "tags": ["User"],
        "summary": "Delete User Account",
        "description": "Delete User Account",
        "operationId": "delete_user_account",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/sports/list": {
      "get": {
        "tags": ["User"],
        "summary": "Country list",
        "description": "Get Sports List Added By Admin",
        "operationId": "sports_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/update/sports": {
      "put": {
        "tags": ["User"],
        "summary": "Update User Sports",
        "description": "Update User Sports",
        "operationId": "user_sports",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "chosenSports", 
            "in": "formData", 
            "required": true, 
            "description": "Update the sports chosen by user"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/sports/count": {
      "get": {
        "tags": ["User"],
        "summary": "User Sports Count",
        "description": "Get Sports Count Selected By User",
        "operationId": "sports_count",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/update/aboutMe": {
      "put": {
        "tags": ["User"],
        "summary": "Update About Me",
        "description": "Update About Me",
        "operationId": "about_me",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          { 
            "name": "jerseyDetails", 
            "in": "formData", 
            "required": true, 
            "type": "object",
            "description": "Update the jersey details",
            "default": {
              "shirt_size" : "M",
              "pant_size" : "M",
              "name" : "john",
              "number": 205
            }
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Enter description about yourself",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Lorem ipsum is simple demo text."
          },
          {
            "name": "teamId",
            "in": "formData",
            "description": "Enter teamId",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "profileImage",
            "in": "formData",
            "type": "file",
            "required" : true,
            "description": "Upload your profile image "
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/upload/media": {
      "post": {
        "tags": ["User"],
        "summary": "Upload Media",
        "description": "Upload Media",
        "operationId": "upload_media",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "media",
            "in": "formData",
            "type": "array",
            "items": {           
              "type": "file"
            },
            "required" : true,
            "description": "Upload your media"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/room/members/list/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Upload Media",
        "description": "Upload Media",
        "operationId": "upload_media",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required" : true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/mySports/list": {
      "get": {
        "tags": ["User"],
        "summary": "My Sports list",
        "description": "Get Sports List Selected By User",
        "operationId": "user_sports_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/help": {
      "post": {
        "tags": ["User"],
        "summary": "Post Help Query To Admin",
        "description": "Post Help Query To Admin",
        "operationId": "help_query",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "title",
            "in": "formData",
            "description": "Enter title of the query",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Lorem ipsum is simple demo text."
          },
          {
            "name": "message",
            "in": "formData",
            "description": "Enter message of the query",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Lorem ipsum is simple demo text."
          },
          {
            "name": "suggestion",
            "in": "formData",
            "description": "Enter suggestion/feedback if any",
            "type": "string",
            "format": "string",
            "default": "Lorem ipsum is simple demo text."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/teams/colours/list": {
      "get": {
        "tags": ["Team"],
        "summary": "Colours list",
        "description": "Get Colours List Created By Admin and pick any one colour to create team",
        "operationId": "colours_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/create/team": {
      "post": {
        "tags": ["Team"],
        "summary": "Create User Teams",
        "description": "Create User Teams",
        "operationId": "create_user_teams",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "teamName",
            "in": "formData",
            "description": "Enter Team Name",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "KKR"
          },
          {
            "name": "sports_id",
            "in": "formData",
            "description": "Enter Sports Id",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "640716590f0dd6434be96b57"
          },
          {
            "name": "country",
            "in": "formData",
            "description": "Enter Country Name",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "India"
          },
          {
            "name": "state",
            "in": "formData",
            "description": "Enter State Name",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Punjab"
          },
          {
            "name": "city",
            "in": "formData",
            "description": "Enter City Name",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Ludhiana"
          },
          {
            "name": "teamColour_id",
            "in": "formData",
            "description": "Enter Team Colour Id",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "#fff"
          },
          {
            "name": "coverPhoto",
            "in": "formData",
            "description": "Team Cover photo",
            "required": true,
            "type": "file"
          },
          {
            "name": "logo",
            "in": "formData",
            "description": "Team Logo",
            "required": true,
            "type": "file"
          },
          {
            "name": "tagLine",
            "in": "formData",
            "description": "Tag line",
            "required": false,
            "default": ""
          },
          {
            "name": "creatorImage",
            "in": "formData",
            "description": "Team creator image",
            "required": true,
            "type": "file"
          },
          {
            "name": "aboutCreator",
            "in": "formData",
            "description": "About team creator",
            "required": true,
            "default": "Lorem ipsum is simple demo text."
          },
          {
            "name": "expectations",
            "in": "formData",
            "description": "Expectations from the team",
            "required": false,
            "default": "Lorem ipsum is simple demo text."
          },
          {
            "name": "pantSize",
            "in": "formData",
            "description": "Creator jersey type",
            "required": true,
            "default": "Shirts/Shorts"
          },
          {
            "name": "jerseySize",
            "in": "formData",
            "description": "Jersey size",
            "required": true,
            "default": "M/L"
          },
          {
            "name": "nameOnJersey",
            "in": "formData",
            "description": "Name On Jersey",
            "required": true,
            "default": "Gaurav"
          },
          {
            "name": "numberOnJersey",
            "in": "formData",
            "description": "Number On Jersey",
            "required": true,
            "default": "07"
          },
          {
            "name": "creatorIsAdmin",
            "in": "formData",
            "description": "Mark as admin",
            "required": true,
            "default": "false"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/team/add-member": {
      "post": {
        "tags": ["Team"],
        "summary": "Add team member",
        "description": "Add team member",
        "operationId": "add_team_member",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "image",
            "in": "formData",
            "description": "Team member image",
            "required": false,
            "type": "file"
          },
          {
            "name": "fullName",
            "in": "formData",
            "description": "Enter full Name",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "Gaurav"
          },
          {
            "name": "mobile",
            "in": "formData",
            "description": "Enter mobile",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "+918765432345"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "Enter email",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "test@gmail.com"
          },
          {
            "name": "teamId",
            "in": "formData",
            "description": "Enter teamId",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "6411809c3d6abeca388fd423"
          },
          {
            "name": "isAdmin",
            "in": "formData",
            "description": "Check creator is admin",
            "required": false,            
            "default": "false"
          },
          {
            "name": "memberId",
            "in": "formData",
            "description": "Enter memberId of the member (i.e. _id of that particular member) if you want to add existing member",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "6411809c3d6abeca388fd423"
          }
          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/myteams/list": {
      "get": {
        "tags": ["Team"],
        "summary": "Teams list",
        "description": "Get Teams List Created By User",
        "operationId": "teams_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (fullName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Param Acc To Which You Want The Results Get Sorted",
            "type": "string",
            "format": "string"
          },
          {
            "name": "myTeams",
            "in": "query",
            "description": "Enter this param if you want to get the teams only which you have created not those teams whom you are member",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/team/request/{teamId}/{email}": {
      "get": {
        "tags": ["Team"],
        "summary": "Team request details",
        "description": "Get team details by team id and email of login user that send via email to join team",
        "operationId": "team_request_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "teamId", 
            "in": "path", 
            "required": true, 
            "description": ""
          },
          {
            "name": "email", 
            "in": "path", 
            "required": true, 
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/team/details/{teamId}": {
      "get": {
        "tags": ["Team"],
        "summary": "Team  details",
        "description": "Get team details by team id",
        "operationId": "team_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "teamId", 
            "in": "path", 
            "required": true, 
            "description": ""
          }
          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/team/membersList/download/{teamId}": {
      "get": {
        "tags": ["Team"],
        "summary": "Get Team Members List download",
        "description": "Get Team Members List download",
        "operationId": "team_members_list_download",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "teamId", 
            "in": "path", 
            "required": true, 
            "description": "Enter teamId of the team whom you want to download members list",
            "type": "string"
            
          }
          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/team/request/accept-reject": {
      "post": {
        "tags": ["Team"],
        "summary": "Accept or regect team request",
        "description": "Accept or regect team request",
        "operationId": "accept-reject",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [          
          {
            "name": "teamId",
            "in": "formData",
            "description": "Enter team id",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "64180f9f46f5d6c3a2a49088"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "accept or reject",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "accept"
          }                  
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/team/member/delete": {
      "put": {
        "tags": ["Team"],
        "summary": "Delete Team Member",
        "description": "Delete Team Member From Your Team",
        "operationId": "delete-member",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [          
          {
            "name": "teamId",
            "in": "formData",
            "description": "Enter team id",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "64180f9f46f5d6c3a2a49088"
          },
          {
            "name": "memberId",
            "in": "formData",
            "description": "Enter Member Id ",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "member_id",
            "in": "formData",
            "description": "Enter member_id of the member (if memberId is null i.e. member has not accepted the request to join the team and his status is pending yet)",
            "required": false,
            "type": "string",
            "format": "string"
          }                  
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/team/change/adminStatus/member": {
      "put": {
        "tags": ["Team"],
        "summary": "Update Admin Status Of Member",
        "description": "Update Admin Status Of Member",
        "operationId": "update-admin-status",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [          
          {
            "name": "teamId",
            "in": "formData",
            "description": "Enter team id",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "64180f9f46f5d6c3a2a49088"
          },
          {
            "name": "memberId",
            "in": "formData",
            "description": "Enter Member Id ",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "isAdmin",
            "in": "formData",
            "description": "Enter whether the  member is admin or not",
            "required": true,
            "type": "boolean",
            "default": false
          }                 
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/team/delete/{teamId}": {
      "delete": {
        "tags": ["Team"],
        "summary": "Delete Team ",
        "description": "Delete Team",
        "operationId": "delete-team",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [          
          {
            "name": "teamId",
            "in": "path",
            "description": "Enter team id",
            "required": true,
            "type": "string",
            "format": "string"
          }             
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/team/edit/{teamId}": {
      "put": {
        "tags": ["Team"],
        "summary": "Edit Team ",
        "description": "Edit Team",
        "operationId": "Edit-team",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [          
          {
            "name": "teamId",
            "in": "path",
            "description": "Enter team id",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "teamName",
            "in": "formData",
            "description": "Enter Team Name",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "KKR"
          },
          {
            "name": "sports_id",
            "in": "formData",
            "description": "Enter Sports Id",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "640716590f0dd6434be96b57"
          },
          {
            "name": "country",
            "in": "formData",
            "description": "Enter Country Name",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "India"
          },
          {
            "name": "state",
            "in": "formData",
            "description": "Enter State Name",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "Punjab"
          },
          {
            "name": "city",
            "in": "formData",
            "description": "Enter City Name",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "Ludhiana"
          },
          {
            "name": "teamColour_id",
            "in": "formData",
            "description": "Enter Team Colour Id",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "#fff"
          },
          {
            "name": "coverPhoto",
            "in": "formData",
            "description": "Team Cover photo",
            "required": false,
            "type": "file"
          },
          {
            "name": "logo",
            "in": "formData",
            "description": "Team Logo",
            "required": false,
            "type": "file"
          },
          {
            "name": "tagLine",
            "in": "formData",
            "description": "Tag line",
            "required": false,
            "default": ""
          }           
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/add-member": {
      "post": {
        "tags": ["All-members"],
        "summary": "Add normal member",
        "description": "Add  member",
        "operationId": "add_member",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "image",
            "in": "formData",
            "description": "Member image",
            "required": false,
            "type": "file"
          },
          {
            "name": "fullName",
            "in": "formData",
            "description": "Enter full Name",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Gaurav"
          },
          {
            "name": "mobile",
            "in": "formData",
            "description": "Enter mobile",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "+918765432345"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "Enter email",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "test@gmail.com"
          },
          {
            "name": "sportId",
            "in": "formData",
            "description": "Enter sportId",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "6411809c3d6abeca388fd423"
          } ,
          {
            "name": "isAdmin",
            "in": "formData",
            "description": "Enter whether the added member is admin or not",
            "required": true,
            "type": "boolean",
            "default": false
          }        
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/add-member/request/{creatorId}/{email}": {
      "get": {
        "tags": ["All-members"],
        "summary": "Member request details",
        "description": "Get member details invite through email",
        "operationId": "member_request_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "creatorId", 
            "in": "path", 
            "required": true, 
            "description": ""
          },
          {
            "name": "email", 
            "in": "path", 
            "required": true, 
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/get-all-members": {
      "get": {
        "tags": ["All-members"],
        "summary": "All member list",
        "description": "Get member list",
        "operationId": "get-all-members",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (fullName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Param Acc To Which You Want The Results Get Sorted",
            "type": "string",
            "format": "string"
          },
          {
            "name": "event",
            "in": "query",
            "description": "Enter event Param if you want also listing of members of teams in which you are admin.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/get-members-teams-list/{memberId}/{creatorId}": {
      "get": {
        "tags": ["All-members"],
        "summary": "All member list",
        "description": "Get member list",
        "operationId": "get-all-members",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "description": "Enter Id Of The Member Whom You Want To See Teams List",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "creatorId",
            "in": "path",
            "description": "Enter Id Of The Creator Of The Team",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (fullName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Param Acc To Which You Want The Results Get Sorted",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/all-member/delete": {
      "post": {
        "tags": ["All-members"],
        "summary": "Delete Member ",
        "description": "Delete Member",
        "operationId": "delete-member",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [          
          {
            "name": "memberId",
            "in": "formData",
            "description": "Enter memberId (Use this param in case you are deleting a member who is part of some team)",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "teamId",
            "in": "formData",
            "description": "Enter teamId (Use this param in case you are deleting a member who is part of some teams)",
            "required": false,
            "type": "array",
            "items": {           
              "type": "string"
            }
          },
          {
            "name": "member_id",
            "in": "formData",
            "description": "Enter member_id (i.e. main _id of the member. Use this param in case you are deleting a member who is not part of any team) ",
            "required": false,
            "type": "string",
            "format": "string"
          }             
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/add-family-member": {
      "post": {
        "tags": ["Family member"],
        "summary": "Add family member",
        "description": "Add family member",
        "operationId": "add-family-member",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "image",
            "in": "formData",
            "description": "Member image",
            "required": true,
            "type": "file"
          },
          {
            "name": "fullName",
            "in": "formData",
            "description": "Enter full Name",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Gaurav"
          },
          {
            "name": "dob",
            "in": "formData",
            "description": "Date in YYYY-MM-DD format",
            "required": true,
            "type": "string",
            "format": "MM-DD-YYYY",
            "default": "12-10-1998"
          },
          {
            "name": "gender",
            "in": "formData",
            "description": "Select gender",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "male"
          },
          {
            "name": "relationWithCreator",
            "in": "formData",
            "description": "Select relation with member",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "father"
          }         
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/edit-family-member/{memberId}": {
      "put": {
        "tags": ["Family member"],
        "summary": "Edit family member",
        "description": "Edit family member",
        "operationId": "edit-family-member",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "description": "Enter main _id of the family member",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "Member image",
            "required": false,
            "type": "file"
          },
          {
            "name": "fullName",
            "in": "formData",
            "description": "Enter full Name",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Gaurav"
          },
          {
            "name": "dob",
            "in": "formData",
            "description": "Enter date of birth",
            "required": true,
            "type": "string",
            "format": "MM-DD-YYYY",
            "default": "12-10-1998"
          },
          {
            "name": "gender",
            "in": "formData",
            "description": "Select gender",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "male"
          },
          {
            "name": "relationWithCreator",
            "in": "formData",
            "description": "Select relation with member",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "father"
          }         
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/member/request/accept-reject": {
      "post": {
        "tags": ["All-members"],
        "summary": "Accept or regect team request",
        "description": "Accept or regect team request",
        "operationId": "accept-reject",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [          
          {
            "name": "memberId",
            "in": "formData",
            "description": "Enter member id",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "64180f9f46f5d6c3a2a49088"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "accept or reject",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "accept"
          }                  
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/get-family-members": {
      "get": {
        "tags": ["Family member"],
        "summary": "All family member list",
        "description": "Get family member list",
        "operationId": "get-family-members",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (fullName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Param Acc To Which You Want The Results Get Sorted",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/create": {
      "post": {
        "tags": ["Event"],
        "summary": "Create event",
        "description": "Create event",
        "operationId": "event_create",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventName",
            "in": "formData",
            "description": "Event name",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventType",
            "in": "formData",
            "description": "Event type (practice/game/tournament)",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "practice"
          },
          {
            "name": "opponentName",
            "in": "formData",
            "description": "Opponent Name",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "Test"
          },
          {
            "name": "sportId",
            "in": "formData",
            "description": "Enter sport id",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "64140dfc5489a408199dcb64"
          },
          {
            "name": "latitude",
            "in": "formData",
            "description": "Enter latitude",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "22.4567654"
          },
          {
            "name": "longitude",
            "in": "formData",
            "description": "Enter longitude",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "22.4567654"
          },
          {
            "name": "address",
            "in": "formData",
            "description": "Enter address",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "eventDate",
            "in": "formData",
            "description": "Event date",
            "required": true,
            "type": "string",
            "format": "date",
            "default": "2023-04-29"
          },
          {
            "name": "startTime",
            "in": "formData",
            "description": "Event start time",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "09:00 am"
          },
          {
            "name": "endTime",
            "in": "formData",
            "description": "Event end time",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "11:00 am"
          } ,
          {
            "name": "notes",
            "in": "formData",
            "description": "Event notes",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Lorem ipsum is simple demo text."
          } ,
          {
            "name": "teamId",
            "in": "formData",
            "description": "Pass when team selected ",
            "required": false,
            "type": "string",
            "format": "string"            
          },
          {
            "name": "teamIds",
            "in": "formData",
            "type": "array",
            "items": {           
              "type": "string"
            },
            "description": "Team id in array []",
            "required": false
          },
          {
            "name": "eventMembers",
            "in": "formData",
            "type": "array",
            "items": {           
              "type": "string"
            },
            "description": "Member id in array []"
          }           
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/edit/{eventId}": {
      "put": {
        "tags": ["Event"],
        "summary": "Edit Event ",
        "description": "Edit Event",
        "operationId": "Edit-event",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventName",
            "in": "formData",
            "description": "Event name",
            "required": false,
            "type": "string"
          },
          {
            "name": "opponentName",
            "in": "formData",
            "description": "Opponent Name",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "Test"
          },
          {
            "name": "latitude",
            "in": "formData",
            "description": "Enter latitude",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "22.4567654"
          },
          {
            "name": "longitude",
            "in": "formData",
            "description": "Enter longitude",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "22.4567654"
          },
          {
            "name": "address",
            "in": "formData",
            "description": "Enter address",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "eventDate",
            "in": "formData",
            "description": "Event date",
            "required": false,
            "type": "string",
            "format": "date",
            "default": "2023-04-29"
          },
          {
            "name": "startTime",
            "in": "formData",
            "description": "Event start time",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "09:00 am"
          },
          {
            "name": "endTime",
            "in": "formData",
            "description": "Event end time",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "11:00 am"
          } ,
          {
            "name": "notes",
            "in": "formData",
            "description": "Event notes",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "Lorem ipsum is simple demo text."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/request/{eventId}/{email}/{memberId}": {
      "get": {
        "tags": ["Event"],
        "summary": "Event request details",
        "description": "Get event details invite through email",
        "operationId": "event_request_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventId", 
            "in": "path", 
            "required": true, 
            "description": ""
          },
          {
            "name": "email", 
            "in": "path", 
            "required": true, 
            "description": ""
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "Enter member id (Main _id of the member)",
            "type": "string",
            "format": "string"
          }     
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/list": {
      "get": {
        "tags": ["Event"],
        "summary": "Event event list",
      "description": "Get event list",
        "operationId": "event_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],  
        "parameters": [
          {
            "name": "type", 
            "in": "query",
            "description": "Enter type acc which you want to get event list (practice/game/tournament)",
            "default" : "practice"
          },
          {
            "name": "search", 
            "in": "query", 
            "description": "Enter Event Name Acc to which you want to search"
          }
        ],     
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/membersList/download/{eventId}": {
      "get": {
        "tags": ["Event"],
        "summary": "Get Event Members List download",
        "description": "Get Event Members List download",
        "operationId": "event_members_list_download",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventId", 
            "in": "path", 
            "required": true, 
            "description": "Enter eventId of the event whom you want to download members list",
            "type": "string"
            
          }
          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/get-facility-list": {
      "get": {
        "tags": ["Event"],
        "summary": "Get facility list",
        "description": "Get facility list",
        "operationId": "facility_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],  
        "parameters": [
          {
            "name": "search", 
            "in": "query", 
            "description": "Enter Facility Name Acc to which you want to search"
          }
        ],     
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/request/accept-reject": {
      "post": {
        "tags": ["Event"],
        "summary": "Accept or regect event request",
        "description": "Accept or regect event request",
        "operationId": "event-accept-reject",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [          
          {
            "name": "eventId",
            "in": "formData",
            "description": "Enter event id",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "64180f9f46f5d6c3a2a49088"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "accept or reject",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "accept"
          },
          {
            "name": "memberId",
            "in": "formData",
            "description": "Enter member id (Main _id of the member)",
            "type": "string",
            "format": "string"
          }               
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/details/{eventId}": {
      "get": {
        "tags": ["Event"],
        "summary": "Event  details",
        "description": "Get event details by event id",
        "operationId": "event_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventId", 
            "in": "path", 
            "required": true, 
            "description": ""
          },
          {
            "name": "memberType", 
            "in": "query", 
            "description": "Enter Member Type To get Members List Accordingly Who Have Accepted, Rejected Or Pending The Request(yes/no/pending)"
          }
          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/add/member": {
      "post": {
        "tags": ["Event"],
        "summary": "Add Member in Event",
        "description": "Add Member in Event",
        "operationId": "add_member",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventId",
            "in": "formData",
            "description": "Enter Id Of The Event",
            "required": true,
            "type": "string"
          },
          {
            "name": "memberId",
            "in": "formData",
            "description": "Enter memberId (i.e. _id of the member) Of The Member",
            "required": false,
            "type": "string"
          },
          {
            "name": "deleteMemberId",
            "in": "formData",
            "description": "Enter memberId (i.e. _id of the member) Of The Member",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/send/request/reminder/join" : {
      "post" : {
        "tags" : ["Event"],
        "summary" : "Send Reminder To Member For Accepting Event Request",
        "operationId" : "join_event_reminder",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "eventId",
            "in" : "formData",
            "required" : true,
            "type" : "string",
            "description" : "Enter id of the event (Main _id of the event"
          },
          {
            "name" : "memberId",
            "in" : "formData",
            "required" : true,
            "type" : "array",
            "description" : "Enter main _id of the members in array"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "authorization",
              "in" : "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/send/payment/reminder" : {
      "post" : {
        "tags" : ["Event"],
        "summary" : "Send Reminder To Member For paying Event Expenses",
        "operationId" : "event_payment_reminder",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "eventId",
            "in" : "formData",
            "required" : true,
            "type" : "string",
            "description" : "Enter id of the event (Main _id of the event"
          },
          {
            "name" : "memberId",
            "in" : "formData",
            "required" : true,
            "type" : "array",
            "description" : "Enter main _id of the members in array"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "authorization",
              "in" : "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/add/expense": {
      "post": {
        "tags": ["Event"],
        "summary": "Add Expense in Event",
        "description": "Add Expense in Event",
        "operationId": "add_expense",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventId",
            "in": "formData",
            "description": "Enter Id Of The Event",
            "required": true,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Enter title of the expense",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "water bottle"
          },
          {
            "name": "cost",
            "in": "formData",
            "description": "Enter cost of the expense",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "currencyCode",
            "in": "formData",
            "description": "Enter currencyCode of the cost of expense",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/edit/expense/{expenseId}": {
      "put": {
        "tags": ["Event"],
        "summary": "Edit Expense in Event",
        "description": "Edit Expense in Event",
        "operationId": "edit_expense",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "expenseId",
            "in": "path",
            "description": "Enter Id Of The Expense",
            "required": true,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Enter title of the expense",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "water bottle"
          },
          {
            "name": "cost",
            "in": "formData",
            "description": "Enter cost of the expense",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "currencyCode",
            "in": "formData",
            "description": "Enter currencyCode of the cost of expense",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/expense/delete/{expenseId}": {
      "delete": {
        "tags": ["Event"],
        "summary": "Delete Expense in Event",
        "description": "Delete Expense in Event",
        "operationId": "delete_expense",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "expenseId",
            "in": "path",
            "description": "Enter Id Of The Expense",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/add/receipt": {
      "post": {
        "tags": ["Event"],
        "summary": "Upload Receipt Of Expense in Event",
        "description": "Upload Receipt Of Expense in Event",
        "operationId": "upload_receipt",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventId",
            "in": "formData",
            "description": "Enter Id Of The Event",
            "required": true,
            "type": "string"
          },
          {
            "name": "memberId",
            "in": "formData",
            "description": "Enter _id Of The Member (main _id of the member)",
            "required": true,
            "type": "string"
          },
          {
            "name": "notes",
            "in": "formData",
            "description": "Enter notes about the receipt or expense",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "paymentScreenshots",
            "in": "formData",
            "description": "Upload payment screenshots of type file in array(Array Of Objects of type file)",
            "type": "array",
            "items": {           
              "type": "file"
            },
            "required" : true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/confirm/expensePayment":{
     "post":{
      "tags" : ["Event"],
      "operationId" : "confirm_expense_payment",
      "description" : "Confirm Payment receipt of exepense of event as admin",
      "consumes" : ["application/json"],
      "produces" : ["application/json"],
      "parameters": [
        {
          "name" : "eventId",
          "in" : "formData",
          "description" : "Enter id of the evemt",
          "required": true,
          "type" : "string"
        },
        {
          "name" : "memberId",
          "in" : "formData",
          "description" : "Enter Id Of the member ( Main _id of the member)",
          "required": true,
          "type" : "string"
        }
      ],
      "responses":{
        "200":{
          "description" : "successful operation",
          "schema" :{ 
            "$ref" : "#/definitions/ApiResponse"
          }
        }
      },
      "security" : [
        {
          "Authorization" : {
            "type" : "apiKey",
            "name" : "Authorization",
            "in" : "header"
          }
        }
      ]
     }
    },
    "/api/v1/user/event/change/adminStatus/member": {
      "put": {
        "tags": ["Event"],
        "summary": "Update Admin Status Of Member",
        "description": "Update Admin Status Of Member",
        "operationId": "update-admin-status",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [          
          {
            "name": "eventId",
            "in": "formData",
            "description": "Enter event id",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "64180f9f46f5d6c3a2a49088"
          },
          {
            "name": "memberId",
            "in": "formData",
            "description": "Enter Member Id",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "isAdmin",
            "in": "formData",
            "description": "Enter whether the  member is admin or not",
            "required": true,
            "type": "boolean",
            "default": false
          }                 
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/get-mySchedules/{date}": {
      "get": {
        "tags": ["Event"],
        "summary": "Get My All Schedules list for Events and Trainings",
        "description": "Get my all schedules list",
        "operationId": "my_schedules_list_trainings_events",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Enter Date Get Listing Accordingly",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (trainingName / eventName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Param Acc To Which You Want The Results Get Sorted",
            "type": "string",
            "format": "string"
          }
        ],     
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/get-mySchedules": {
      "get": {
        "tags": ["Event"],
        "summary": "Get My Schedules list for Events",
        "description": "Get my schedules list",
        "operationId": "my_schedules_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Enter Event Type Acc For Which Which You Want To Get The Results (practice/game/tournament)",
            "default": "practice"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Enter Date Get Listing Accordingly",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (fullName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Param Acc To Which You Want The Results Get Sorted",
            "type": "string",
            "format": "string"
          }
        ],     
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/get-mySchedules-sync":{
      "get": {
        "tags": ["Event"],
        "summary": "Get My Schedules list for Events To Sync",
        "description": "Get my schedules list to sync",
        "operationId": "schedule_list_sync",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Enter Event Type Acc For Which Which You Want To Get The Results (practice/game/tournament)"
          },
          {
            "name": "updatedAt",
            "in": "query",
            "description": "Enter Date and Time To Get Listing Accordingly",
            "required" : false,
            "type": "string",
            "format": "string",
            "default": "2023-05-31T10:38:38.546Z"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (fullName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Param Acc To Which You Want The Results Get Sorted",
            "type": "string",
            "format": "string"
          }
        ],     
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/get-pendingPayments": {
      "get": {
        "tags": ["Event"],
        "summary": "Get Events With Pending Payments",
        "description": "Get Events With Pending Payments",
        "operationId": "events_pending_payments",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],   
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "required": false,
            "default": 1
          }
        ], 
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/split/payment": {
      "post": {
        "tags": ["Event"],
        "summary": "Split Payment Of Expenses in Event Manually or Equally",
        "description": "Split Payment Of Expenses in Event Manually or Equally",
        "operationId": "split_payment",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventId",
            "in": "formData",
            "description": "Enter Id Of The Event",
            "required": true,
            "type": "string"
          },
          {
            "name": "isSplitEqually",
            "in": "formData",
            "description": "Enter whether you want to split the payment equally or not (true/false)",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "members",
            "in": "formData",
            "description": "Enter Member Details is the isSplitEqually is false.",
            "type": "array",
            "required" : false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/payment/request": {
      "post": {
        "tags": ["Event"],
        "summary": "Event request details",
        "description": "Get event details invite through email",
        "operationId": "event_request_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventId", 
            "in": "formData", 
            "required": true, 
            "description": ""
          },
          {
            "name": "memberId",
            "in": "formData",
            "description": "Enter member id (Main _id of the members) in array",
            "type": "array",
            "format": "array"
          }     
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/end": {
      "put": {
        "tags": ["Event"],
        "summary": "End Event",
        "description": "End Event",
        "operationId": "end_event",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventId",
            "in": "formData",
            "description": "Enter Id Of The Event",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/event/cancel/{eventId}": {
      "delete": {
        "tags": ["Event"],
        "summary": "Cancel Event",
        "description": "Cancel Event",
        "operationId": "cancel_event",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "Enter Id Of The Event Whom You Want To Delete Or Cancel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/get-profile": {
      "get": {
        "tags": ["User-profile"],
        "summary": "Get profile  details",
        "description": "Get profile  details",
        "operationId": "get-profile",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],        
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/update/profile": {
      "post": {
        "tags": ["User-profile"],
        "summary": "Update user profile",
        "description": "Update user profile",
        "operationId": "update_user_profile",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "profileImage",
            "in": "formData",
            "description": "profile image",
            "required": false,
            "type": "file"
          },
          {
            "name": "fullName",
            "in": "formData",
            "description": "Enter full Name",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Gaurav"
          },
          {
            "name": "nickName",
            "in": "formData",
            "description": "Enter nickName",
            "type": "string",
            "format": "string",
            "default": "Gaurav"
          },
          {
            "name": "mobile",
            "in": "formData",
            "description": "Enter mobile",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "8765432345"
          },          
          {
            "name": "dateOfBirth",
            "in": "formData",
            "description": "Enter date of birth",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "20-03-1998"
          }         
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/change/password": {
      "post": {
        "tags": ["User-profile"],
        "summary": "Change password",
        "description": "Change password",
        "operationId": "change_user_password",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "oldPassword",
            "in": "formData",
            "description": "Enter old password",
            "required": true,
            "type": "string",
            "format": "string"            
          },
          {
            "name": "newPassword",
            "in": "formData",
            "description": "Enter new password",
            "required": true,
            "type": "string",
            "format": "string"            
          },
          {
            "name": "confirmPassword",
            "in": "formData",
            "description": "Enter confirm password",
            "required": true,
            "type": "string",
            "format": "string"           
          }                 
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/get-cms": {
      "get": {
        "tags": ["CMS"],
        "summary": "Get cms  details",
        "description": "Get cms  details",
        "operationId": "get-cms",
        "parameters":[
          {
            "name": "userType",
            "in": "query",
            "description": "Pass user type (user, facility_admin, facility_manager, coach)",
            "required": true,
            "type": "string",
            "format": "string",
            "default":"user"            
          },
          {
            "name": "type",
            "in": "query",
            "description": "Pass cms type (about,privacy,terms)",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "privacy"           
          }
        ],              
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/auth/register": {
      "post": {
        "tags": ["Admin"],
        "summary": "Admin Register",
        "description": "Admin Register",
        "operationId": "admin_register",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "fullName",
            "in": "formData",
            "description": "Enter Full Name",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Sanya Kashyap"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "Enter Email",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "tanya@mailinator.com"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Enter Password",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/admin/auth/login": {
      "post": {
        "tags": ["Admin"],
        "summary": "Login",
        "description": "Admin Login",
        "operationId": "admin_login",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Enter Email",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "tanya@mailinator.com"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Enter Password",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/admin/auth/sendLink": {
      "post": {
        "tags": ["Admin"],
        "summary": "Send Link To Reset Password",
        "description": "Send Link To Reset Password",
        "operationId": "send_link",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Enter Email",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "tanya@mailinator.com"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/admin/auth/update_password": {
      "post": {
        "tags": ["Admin"],
        "summary": "Update Password",
        "description": "Update Or Reset Password",
        "operationId": "send_link",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "newPassword",
            "in": "formData",
            "description": "Enter New Password",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "123456"
          },
          {
            "name": "confirmPassword",
            "in": "formData",
            "description": "Enter Confirm Password",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "123456"
          },
          {
            "name": "token",
            "in": "formData",
            "description": "Enter Random Token Provided In Reset Password Url",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MTMwOTAwODI3MzU4"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "Enter User Type",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "admin"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/admin/auth/change-password": {
      "post": {
        "tags": ["Admin"],
        "summary": "Change Password",
        "description": "Change Password",
        "operationId": "change_password",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "old_password",
            "in": "formData",
            "description": "Enter Old Password",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "123456"
          },
          {
            "name": "new_password",
            "in": "formData",
            "description": "Enter New Password",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "12345678"
          },
          {
            "name": "confirm_password",
            "in": "formData",
            "description": "Enter Confirm Password Same As New Password",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/auth/upload/media": {
      "post": {
        "tags": ["Admin"],
        "summary": "Upload Media",
        "description": "Upload Media",
        "operationId": "upload_admin_media",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "image",
            "in": "formData",
            "description": "Upload image",
            "required": true,
            "type": "file"
          },
          {
            "name": "path",
            "in": "formData",
            "description": "Enter Path Of The Image",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "sports"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/admin/common/dashboard/summary": {
      "get": {
        "tags": ["Dashboard Management"],
        "summary": "dashboard summary",
        "description": "Get dashboard summary",
        "operationId": "dashboard",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/user/map": {
      "get": {
        "tags": ["Dashboard Management"],
        "summary": "User map data",
        "description": "Get User map data",
        "operationId": "userMap",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/user/list": {
      "get": {
        "tags": ["User Management"],
        "summary": "Users list",
        "description": "Get Users List",
        "operationId": "user_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (fullName, email, mobile ) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enter Status Key (active/inactve) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/user/list/download": {
      "get": {
        "tags": ["User Management"],
        "summary": "Users list download",
        "description": "Get Users List Download",
        "operationId": "user_list_download",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (fullName, email, mobile ) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enter Status Key (active/inactve) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/user/details/{id}": {
      "get": {
        "tags": ["User Management"],
        "summary": "Users Details",
        "description": "Get User Details",
        "operationId": "user_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The User",
            "required" : true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/user/update": {
      "put": {
        "tags": ["User Management"],
        "summary": "Update User Details",
        "description": "Update User Details",
        "operationId": "user_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "description": "Enter Id Of The User",
            "required" : true,
            "type": "string",
            "format": "string",
            "default": "641440f6ceaa23d2756b3fda"
          },
          {
            "name": "fullName",
            "in": "formData",
            "description": "Enter Full Name Of The User",
            "required" : true,
            "type": "string",
            "format": "string",
            "default": "Tanya"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "Enter Email Of The User",
            "required" : true,
            "type": "string",
            "format": "string",
            "default": "tanya@mailinator.com"
          },
          {
            "name": "mobile",
            "in": "formData",
            "description": "Enter Mobile No Of The User",
            "required" : true,
            "type": "string",
            "format": "string",
            "default": "94171707206"
          },
          {
            "name": "dateOfBirth",
            "in": "formData",
            "description": "Enter DOB Of The User",
            "required" : true,
            "type": "string",
            "format": "MM-DD-YYYY",
            "default": "12-10-1998"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/user/change_status": {
      "post": {
        "tags": ["User Management"],
        "summary": "Change User Status",
        "description": "Change User Status",
        "operationId": "change_status",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "description": "Enter Id Of The User",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Enter Status Of The User (true/false)",
            "required" : true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/user/delete/{id}": {
      "delete": {
        "tags": ["User Management"],
        "summary": "Delete User",
        "description": "Delete User",
        "operationId": "delete_user",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The User",
            "required" : true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/user/teams/list/{id}": {
      "get": {
        "tags": ["User Management"],
        "summary": "User Teams list",
        "description": "Get User Teams List",
        "operationId": "user_teams_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The User",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (teamName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enter Status Key (active/inactve) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/user/teams/details/{teamId}": {
      "get": {
        "tags": ["User Management"],
        "summary": "User Teams detail",
        "description": "Get User Teams Detail",
        "operationId": "user_teams_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Enter teamId Of The User",
            "required" : true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/user/teams/list/download/{id}": {
      "get": {
        "tags": ["User Management"],
        "summary": "User Teams list",
        "description": "Get User Teams List",
        "operationId": "user_teams_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The User",
            "required" : true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/admin/user/events/list/{id}": {
      "get": {
        "tags": ["User Management"],
        "summary": "User Events list",
        "description": "Get User Events List",
        "operationId": "user_events_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The User",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (eventName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enter Status Key (active/inactve) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/user/events/list/download/{id}": {
      "get": {
        "tags": ["User Management"],
        "summary": "User Events list",
        "description": "Download User Events List",
        "operationId": "user_events_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The User",
            "required" : true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/admin/user/training/bookings/list/{id}": {
      "get": {
        "tags": ["User Management"],
        "summary": "User Training Bookings list",
        "description": "User Training Bookings list",
        "operationId": "user_training_bookings_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The User",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search by booking id or facility name",
            "required" : false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter page no",
            "required" : false,
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/user/training/bookings/list/download/{id}": {
      "get": {
        "tags": ["User Management"],
        "summary": "User training bookings list",
        "description": "Download User training booking List",
        "operationId": "user_training_booking_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The User",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Enter type (finances if using for training finances)",
            "required" : false,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/admin/user/event/bookings/list/{id}": {
      "get": {
        "tags": ["User Management"],
        "summary": "User Event Bookings list",
        "description": "User Event Bookings list",
        "operationId": "user_event_bookings_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The User",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search by event name",
            "required" : false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter page no",
            "required" : false,
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/user/event/bookings/list/download/{id}": {
      "get": {
        "tags": ["User Management"],
        "summary": "User event bookings list",
        "description": "Download User event booking List",
        "operationId": "user_event_booking_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The User",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Enter type (finances if using for event finances)",
            "required" : false,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/admin/team/list": {
      "get": {
        "tags": ["Team Management"],
        "summary": "Teams list",
        "description": "Get Teams List",
        "operationId": "team_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (teamName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enter Status Key (active/inactve) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/team/list/download": {
      "get": {
        "tags": ["Team Management"],
        "summary": "Teams list download",
        "description": "Get Teams List Download",
        "operationId": "team_list_download",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (teamName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enter Status Key (active/inactve) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/team/details/{id}": {
      "get": {
        "tags": ["Team Management"],
        "summary": "Team details",
        "description": "Get Team Details",
        "operationId": "admin_team_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Team To Get Details",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/team/members/list/{id}": {
      "get": {
        "tags": ["Team Management"],
        "summary": "Team Members List",
        "description": "Get Team Members List",
        "operationId": "admin_team_members_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Team To Get Members List",
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (studentName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enter Status Key (active/inactve) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/training/list": {
      "get": {
        "tags": ["Training Management"],
        "summary": "Trainings list",
        "description": "Get Training List",
        "operationId": "admin_training_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (trainingName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enter Status Key (active/inactve) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/training/list/download": {
      "get": {
        "tags": ["Training Management"],
        "summary": "Trainings list download",
        "description": "Get Training List Download",
        "operationId": "admin_training_list_download",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (trainingName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enter Status Key (active/inactve) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/training/details/{id}": {
      "get": {
        "tags": ["Training Management"],
        "summary": "Training details",
        "description": "Get Training Details",
        "operationId": "admin_training_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Training To Get Details",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/training/students/list/{id}": {
      "get": {
        "tags": ["Training Management"],
        "summary": "Training details",
        "description": "Get Training Students List",
        "operationId": "admin_training_students_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Training To Get Students",
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (studentName) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Enter limit To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/commission/add": {
      "post": {
        "tags": ["Commission Management"],
        "summary": "Add Commission",
        "description": "Add Commission",
        "operationId": "add_commission",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "type",
            "in": "formData",
            "description": "Enter type (platformFees/commission)",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "commissionType",
            "in": "formData",
            "description": "Enter commissionType (percent/amount)",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "applicableTo",
            "in": "formData",
            "description": "Enter type (trainingSessions/coachBookings/equipmentRental)",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "criteria",
            "in": "formData",
            "description": "Enter type (sports/country/state/city/facility)",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "dateFrom",
            "in": "formData",
            "description": "Enter dateFrom",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "dateTo",
            "in": "formData",
            "description": "Enter dateTo",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "sportId",
            "in": "formData",
            "description": "Enter sportId",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "facilityId",
            "in": "formData",
            "description": "Enter facilityId",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "country",
            "in": "formData",
            "description": "Enter country",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "state",
            "in": "formData",
            "description": "Enter state",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "city",
            "in": "formData",
            "description": "Enter city",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "amount",
            "in": "formData",
            "description": "Enter amount",
            "type": "integer",
            "format": "integer",
            "required": false
          },
          {
            "name": "percent",
            "in": "formData",
            "description": "Enter percent",
            "type": "integer",
            "format": "integer",
            "required": false
          }
          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/commission/list": {
      "get": {
        "tags": ["Commission Management"],
        "summary": "Commission List",
        "description": "Commission list",
        "operationId": "commission_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter page",
            "type": "integer",
            "format": "integer"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Enter order(desc/asc)",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/commission/list/download": {
      "get": {
        "tags": ["Commission Management"],
        "summary": "Commission List Download",
        "description": "Commission list download",
        "operationId": "commission_list_download",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Enter search ( search by country / state / city)",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/commission/details/{id}": {
      "get": {
        "tags": ["Commission Management"],
        "summary": "Commission Details",
        "description": "Commission detail",
        "operationId": "commission_detail",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter _id of the commission",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/commission/edit/details": {
      "put": {
        "tags": ["Commission Management"],
        "summary": "Edit Commission",
        "description": "Edit Commission",
        "operationId": "commission_edit",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "commissionId",
            "in": "formData",
            "description": "Enter _id of the commission",
            "type": "string",
            "format": "string",
            "required": "true"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "Enter type (platformFees/commission)",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "commissionType",
            "in": "formData",
            "description": "Enter commissionType (percent/amount)",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "applicableTo",
            "in": "formData",
            "description": "Enter type (trainingSessions/coachBookings/equipmentRental)",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "criteria",
            "in": "formData",
            "description": "Enter type (sports/country/state/city/facility)",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "dateFrom",
            "in": "formData",
            "description": "Enter dateFrom",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "dateTo",
            "in": "formData",
            "description": "Enter dateTo",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "sportId",
            "in": "formData",
            "description": "Enter sportId",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "facilityId",
            "in": "formData",
            "description": "Enter facilityId",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "country",
            "in": "formData",
            "description": "Enter country",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "state",
            "in": "formData",
            "description": "Enter state",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "city",
            "in": "formData",
            "description": "Enter city",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "amount",
            "in": "formData",
            "description": "Enter amount",
            "type": "integer",
            "format": "integer",
            "required": false
          },
          {
            "name": "percent",
            "in": "formData",
            "description": "Enter percent",
            "type": "integer",
            "format": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/commission/delete/{id}": {
      "delete": {
        "tags": ["Commission Management"],
        "summary": "Delete Commission",
        "description": "Delete Commission",
        "operationId": "commission_delete",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter _id of the commission",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/banner/list": {
      "get": {
        "tags": ["Banner Management"],
        "summary": "Banner List",
        "description": "Banner List",
        "operationId": "banner_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter page",
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/banner/details/{id}": {
      "get": {
        "tags": ["Banner Management"],
        "summary": "Banner Details",
        "description": "Banner detail",
        "operationId": "banner_detail",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter _id of the banner",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/add/banner": {
      "post": {
        "tags": ["Banner Management"],
        "summary": "Edit Banner",
        "description": "Edit Banner",
        "operationId": "banner_edit",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "bannerName",
            "in": "formData",
            "description": "Enter banner name",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "bannerImage",
            "in": "formData",
            "description": "Upload bannerImage",
            "required" : true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/update/banner": {
      "put": {
        "tags": ["Banner Management"],
        "summary": "Edit Banner",
        "description": "Edit Banner",
        "operationId": "banner_edit",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "bannerId",
            "in": "formData",
            "description": "Enter _id of the banner",
            "type": "string",
            "format": "string",
            "required": "true"
          },
          {
            "name": "bannerName",
            "in": "formData",
            "description": "Enter banner name",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "bannerImage",
            "in": "formData",
            "description": "Upload bannerImage",
            "required" : false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/delete/bannner/{id}": {
      "delete": {
        "tags": ["Banner Management"],
        "summary": "Delete Banner",
        "description": "Delete Banner",
        "operationId": "banner_delete",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter _id of the banner",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/promotions/list": {
      "get": {
        "tags": ["Promotion Management"],
        "summary": "Promotion List",
        "description": "Promotion List",
        "operationId": "promotion_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter page",
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/promotion/details/{id}": {
      "get": {
        "tags": ["Promotion Management"],
        "summary": "Promotion Details",
        "description": "Promotion detail",
        "operationId": "promotion_detail",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter _id of the promotion",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/add/promotion": {
      "post": {
        "tags": ["Promotion Management"],
        "summary": "Add Promotion",
        "description": "Add Promotion",
        "operationId": "promotion_add",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "promotionType",
            "in": "formData",
            "description": "Enter promotion type (facility)",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "promotionName",
            "in": "formData",
            "description": "Enter promotion name",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "facilityId",
            "in": "formData",
            "description": "Enter facilityId ( _id of facility branch)",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Enter description",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "maximumUses",
            "in": "formData",
            "description": "Enter maximumUses",
            "type": "integer",
            "format": "integer",
            "required": true
          },
          {
            "name": "startDate",
            "in": "formData",
            "description": "Enter startDate",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "endDate",
            "in": "formData",
            "description": "Enter endDate",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "bannerImage",
            "in": "formData",
            "description": "Enter bannerImage url",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "promoCode",
            "in": "formData",
            "description": "Enter promoCode",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "discountType",
            "in": "formData",
            "description": "Enter discountType ( percent/ amount)",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "percent",
            "in": "formData",
            "description": "Enter percent",
            "type": "integer",
            "format": "integer"
          },
          {
            "name": "amount",
            "in": "formData",
            "description": "Enter amount",
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/update/promotion": {
      "put": {
        "tags": ["Promotion Management"],
        "summary": "Edit Promotion",
        "description": "Edit Promotion",
        "operationId": "promotion_edit",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "promotionId",
            "in": "formData",
            "description": "Enter _id of the promotion",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "promotionType",
            "in": "formData",
            "description": "Enter promotion type (facility)",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "promotionName",
            "in": "formData",
            "description": "Enter promotion name",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "facilityId",
            "in": "formData",
            "description": "Enter facilityId ( _id of facility branch)",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Enter description",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "maximumUses",
            "in": "formData",
            "description": "Enter maximumUses",
            "type": "integer",
            "format": "integer",
            "required": false
          },
          {
            "name": "startDate",
            "in": "formData",
            "description": "Enter startDate",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "endDate",
            "in": "formData",
            "description": "Enter endDate",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "bannerImage",
            "in": "formData",
            "description": "Enter bannerImage url",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "promoCode",
            "in": "formData",
            "description": "Enter promoCode",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "discountType",
            "in": "formData",
            "description": "Enter discountType ( percent/ amount)",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "percent",
            "in": "formData",
            "description": "Enter percent",
            "type": "integer",
            "format": "integer"
          },
          {
            "name": "amount",
            "in": "formData",
            "description": "Enter amount",
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/delete/promotion/{id}": {
      "delete": {
        "tags": ["Promotion Management"],
        "summary": "Delete Promotion",
        "description": "Delete Promotion",
        "operationId": "promotion_delete",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter _id of the promotion",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/allFacilities/list": {
      "get": {
        "tags": ["Promotion Management"],
        "summary": "Get All Facilities List",
        "description": "Get All Facilities List",
        "operationId": "all_facility_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/update/cms": {
      "post": {
        "tags": ["Content Management"],
        "summary": "Add / Edit Cms",
        "description": "Add or update Cms",
        "operationId": "add_update_cms",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "action",
            "in": "formData",
            "description": "Enter action (add/update)",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "cmsId",
            "in": "formData",
            "description": "Enter _id of the cms if action is update",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "type",
            "in": "formData",
            "description": "Enter cms type (about,privacy,terms)",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "Enter cms slug",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Enter description",
            "type": "string",
            "format": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/cms/delete/{id}": {
      "delete": {
        "tags": ["Content Management"],
        "summary": "Delete Cms",
        "description": "Delete cms",
        "operationId": "cms_delete",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter _id of the cms",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/cms/list": {
      "get": {
        "tags": ["Content Management"],
        "summary": "Get cms list",
        "description": "Get cms list",
        "operationId": "admin_cms_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter page",
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/cms/details/{id}": {
      "get": {
        "tags": ["Content Management"],
        "summary": "Get cms details",
        "description": "Get cms details",
        "operationId": "admin_cms_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter _id of the cms",
            "type": "string",
            "format": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/reply/query": {
      "post": {
        "tags": ["Support Management"],
        "summary": "Reply query",
        "description": "Reply query",
        "operationId": "reply_query",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "supportId",
            "in": "formData",
            "description": "Enter _id of the support query",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "adminReply",
            "in": "formData",
            "description": "Enter admin reply",
            "type": "string",
            "format": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/support/delete/{id}": {
      "delete": {
        "tags": ["Support Management"],
        "summary": "Delete Query",
        "description": "Delete query",
        "operationId": "query_delete",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter _id of the query",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/support/list": {
      "get": {
        "tags": ["Support Management"],
        "summary": "Get support list",
        "description": "Get support list",
        "operationId": "admin_support_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter page",
            "type": "integer",
            "format": "integer"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter search by title",
            "type": "string",
            "format": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Enter filter by status responded or not (1/2)",
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/notification/create": {
      "post": {
        "tags": ["Notification Management"],
        "summary": "Send Notifications",
        "description": "Send Notifications",
        "operationId": "send_notifications",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "type",
            "in": "formData",
            "description": "Enter type ( 1 => all / 2 => individual ) ",
            "type": "integer",
            "format": "integer",
            "required": true
          },
          {
            "name": "userType",
            "in": "formData",
            "description": "Enter User Type ( 1 => user / 2 => facility / 3 => both)",
            "type": "integer",
            "format": "integer",
            "required": true
          },
          {
            "name": "user",
            "in": "formData",
            "description": "Enter users id",
            "type": "array",
            "items": {           
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "formData",
            "description": "Enter location i.e. country",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Enter title",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "message",
            "in": "formData",
            "description": "Enter message",
            "type": "string",
            "format": "string",
            "required": true
          },
          {
            "name": "notificationType",
            "in": "formData",
            "description": "Enter notification Type ( 1 => push notification / 2 => email )",
            "type": "integer",
            "format": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/notification/delete/{id}": {
      "delete": {
        "tags": ["Notification Management"],
        "summary": "Delete notification",
        "description": "Delete notification",
        "operationId": "notification_delete",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter _id of the notification",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/notification/list": {
      "get": {
        "tags": ["Notification Management"],
        "summary": "Get notification list",
        "description": "Get notification list",
        "operationId": "admin_notification_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter page",
            "type": "integer",
            "format": "integer"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter search by title",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/allUsers/list": {
      "get": {
        "tags": ["Notification Management"],
        "summary": "Get all users list",
        "description": "Get all users list",
        "operationId": "admin_allUsers_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/common/allFacilityAdmin/list": {
      "get": {
        "tags": ["Notification Management"],
        "summary": "Get all facility admins list",
        "description": "Get all facility admins list",
        "operationId": "admin_facilityAdmins_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/list": {
      "get": {
        "tags": ["Facility Management"],
        "summary": "Facility list",
        "description": "Get Facility List",
        "operationId": "admin_facility_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (facility name) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enter Status Key (active/inactve) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/list/download": {
      "get": {
        "tags": ["Facility Management"],
        "summary": "Download Facility list",
        "description": "Get Facility List Downloaded",
        "operationId": "admin_facility_list_download",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/admin/details/{id}": {
      "get": {
        "tags": ["Facility Management"],
        "summary": "Facility admin details",
        "description": "Get Facility Admin Details",
        "operationId": "facility_admin_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Facility Admin To Get His Details",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/branch/details/{id}": {
      "get": {
        "tags": ["Facility Management"],
        "summary": "Facility branch details",
        "description": "Get Facility Branch Details",
        "operationId": "facility_branch_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Facility Branch To Get Its Details",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/branch/training/list/{id}": {
      "get": {
        "tags": ["Facility Management"],
        "summary": "Facility branch trainings list",
        "description": "Get Facility Branch trainings list",
        "operationId": "facility_branch_trainings_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Facility Branch To Get Its Trainings List",
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter page no",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter search by training name",
            "type": "string",
            "format": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/branch/bookings/list/{id}": {
      "get": {
        "tags": ["Facility Management"],
        "summary": "Facility branch bookings list",
        "description": "Get Facility Branch bookings list",
        "operationId": "facility_branch_bookings_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Facility Branch To Get Its bookings List",
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter page no",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter search by booking id",
            "type": "string",
            "format": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/branch/payments/list/{id}": {
      "get": {
        "tags": ["Facility Management"],
        "summary": "Facility branch payments list",
        "description": "Get Facility Branch payments list",
        "operationId": "facility_branch_payments_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Facility Branch To Get Its payments List",
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter page no",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter search by user name",
            "type": "string",
            "format": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/branch/reviews/list/{id}": {
      "get": {
        "tags": ["Facility Management"],
        "summary": "Facility branch reviews list",
        "description": "Get Facility Branch reviews list",
        "operationId": "facility_branch_reviews_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Facility Branch To Get Its reviews List",
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter page no",
            "type": "string",
            "format": "string",
            "required": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter search by review text",
            "type": "string",
            "format": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/branch/training/list/download/{id}": {
      "get": {
        "tags": ["Facility Management"],
        "summary": "Download Facility Trainings list",
        "description": "Get Facility Trainings List Downloaded",
        "operationId": "admin_facility_trainings_list_download",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters":[
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Facility Branch",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/branch/bookings/list/download/{id}": {
      "get": {
        "tags": ["Facility Management"],
        "summary": "Download Facility Bookings list",
        "description": "Get Facility Bookings List Downloaded",
        "operationId": "admin_facility_bookings_list_download",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters":[
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Facility Branch",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/branch/payments/list/download/{id}": {
      "get": {
        "tags": ["Facility Management"],
        "summary": "Download Facility Payments list",
        "description": "Get Facility Payments List Downloaded",
        "operationId": "admin_facility_payments_list_download",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters":[
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Facility Branch",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/coach/list": {
      "get": {
        "tags": ["Coach Management"],
        "summary": "Coach list",
        "description": "Get Coach List",
        "operationId": "admin_coach_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (facility name) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enter Status Key (active/inactve) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          },
          {
            "name": "facilityAdminId",
            "in": "query",
            "description": "Enter _id of the facility Admin",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/coach/list/download": {
      "get": {
        "tags": ["Coach Management"],
        "summary": "Coach list download",
        "description": "Get Coach List Downloaded",
        "operationId": "admin_coach_list_download",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (coach name) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enter Status Key (active/inactve) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/coach/trainingsList/download/{id}": {
      "get": {
        "tags": ["Coach Management"],
        "summary": "Download Caoch list",
        "description": "Get Coach List Downloaded",
        "operationId": "admin_coach_list_download",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters":[
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Coach To Get Listing Of Its Trainings",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/coach/facilityAminsList/download/{id}": {
      "get": {
        "tags": ["Coach Management"],
        "summary": "Download Caoch Facility Admins list",
        "description": "Get Coach Facility Admin List Downloaded",
        "operationId": "admin_coach_facility_admin_list_download",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters":[
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Coach To Get Listing Of Its Facility Admins",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/coach/details/{id}": {
      "get": {
        "tags": ["Coach Management"],
        "summary": "Coach details",
        "description": "Get Coach Details",
        "operationId": "coach_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Coach To Get His Details",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/coach/facilityAdmins/list/{id}": {
      "get": {
        "tags": ["Coach Management"],
        "summary": "Coach facility admins list",
        "description": "Get Coach facility admins list",
        "operationId": "coach_facility_admins_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Coach",
            "type": "string",
            "format": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter search by facility admin name",
            "type": "string",
            "format": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/coach/trainings/list/{id}": {
      "get": {
        "tags": ["Coach Management"],
        "summary": "Coach trainings list",
        "description": "Get Coach trainings list",
        "operationId": "coach_trainings_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Coach",
            "type": "string",
            "format": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter search by training name",
            "type": "string",
            "format": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/coach/reviews/list/{id}": {
      "get": {
        "tags": ["Coach Management"],
        "summary": "Coach reviews list",
        "description": "Get Coach reviews list",
        "operationId": "coach_reviews_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Coach",
            "type": "string",
            "format": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter search ",
            "type": "string",
            "format": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/edit/details/{id}": {
      "put": {
        "tags": ["Facility Management"],
        "summary": "Edit Facility Admin / Coach Details",
        "description": "Edit Facility Admin / Coach Details",
        "operationId": "edit_facility_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Facility Admin/ Coach",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Enter Name Of The Facility Admin/ Coach",
            "required" : false,
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "formData",
            "description": "Enter Country Code Of The Facility Admin/ Coach",
            "required" : false,
            "type": "string"
          },
          {
            "name": "mobile",
            "in": "formData",
            "description": "Enter Mobile Of The Facility Admin/ Coach",
            "required" : false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "formData",
            "description": "Enter Country Of The Facility Admin/ Coach",
            "required" : false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "formData",
            "description": "Enter State Of The Facility Admin/ Coach",
            "required" : false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "formData",
            "description": "Enter City Of The Facility Admin/ Coach",
            "required" : false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/facility/change/status": {
      "post": {
        "tags": ["Facility Management"],
        "summary": "Change Facility Admin / Coach Status",
        "description": "Change Facility Admin / Coach Status",
        "operationId": "change_facility_status",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "description": "Enter Id Of The Facility Admin/ Coach",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Enter Status Of The Facility Admin/ Coach (true/false)",
            "required" : true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/sport/list": {
      "get": {
        "tags": ["Sports Management"],
        "summary": "Sports list",
        "description": "Get Sports List",
        "operationId": "sports_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (sports_name) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enter Status Key (active/inactve) To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Enter Sort Key (asc/desc) To Get List Sort Acc To createdAt",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/sport/details/{id}": {
      "get": {
        "tags": ["Sports Management"],
        "summary": "Sports Details",
        "description": "Get Sport Details",
        "operationId": "sport_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Sport",
            "required" : true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/sport/add": {
      "post": {
        "tags": ["Sports Management"],
        "summary": "Add Sports",
        "description": "Add Sports",
        "operationId": "add_sports",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "sports_name",
            "in": "formData",
            "description": "Enter Name Of The Sports",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "sports_name_sp",
            "in": "formData",
            "description": "Enter Name Of The Sport In Spanish",
            "required" : false,
            "type": "string",
            "format": "string",
            "default": "Football"
          },
          {
            "name": "sports_name_it",
            "in": "formData",
            "description": "Enter Name Of The Sport In Italian",
            "required" : false,
            "type": "string",
            "format": "string",
            "default": "Football"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "Upload Image",
            "required" : true,
            "type": "file"
          },
          {
            "name": "selected_image",
            "in": "formData",
            "description": "Upload Selected Image",
            "required" : true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/sport/update": {
      "put": {
        "tags": ["Sports Management"],
        "summary": "Update Sport Details",
        "description": "Update Sport Details",
        "operationId": "sport_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "_id",
            "in": "formData",
            "description": "Enter Id Of The Sport",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "sports_name",
            "in": "formData",
            "description": "Enter Name Of The Sport In English",
            "required" : true,
            "type": "string",
            "format": "string",
            "default": "Football"
          },
          {
            "name": "sports_name_sp",
            "in": "formData",
            "description": "Enter Name Of The Sport In Spanish",
            "required" : true,
            "type": "string",
            "format": "string",
            "default": "Football"
          },
          {
            "name": "sports_name_it",
            "in": "formData",
            "description": "Enter Name Of The Sport In Italian",
            "required" : true,
            "type": "string",
            "format": "string",
            "default": "Football"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "Upload Image",
            "type": "file"
          },
          {
            "name": "selected_image",
            "in": "formData",
            "description": "Upload Selected Image",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/sport/change_status": {
      "put": {
        "tags": ["Sports Management"],
        "summary": "Change Sports Status",
        "description": "Change Sports Status",
        "operationId": "change_sport_status",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "_id",
            "in": "formData",
            "description": "Enter Id Of The Sport",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Enter Status Of The Sport (true/false)",
            "required" : true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/admin/sport/delete/{id}": {
      "delete": {
        "tags": ["Sports Management"],
        "summary": "Delete Sport",
        "description": "Delete Sport",
        "operationId": "delete_sport",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter Id Of The Sport",
            "required" : true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/training/list": {
      "get": {
        "tags": ["User-Training"],
        "summary": "Training list",
        "description": "Get Training list ",
        "operationId": "training_list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (training name To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "rating",
            "in": "query",
            "description": "Enter rating [1/2/3/4] 1 for trainings with 1+ ratings and so on",
            "type": "number",
            "format": "number"
          },
          {
            "name": "proficiencyLevel",
            "in": "query",
            "description": "Enter proficiencyLevel ['Beginners'/ 'Intermediate'/ 'Advanced']",
            "type": "string",
            "format": "string"
          },
          {
            "name": "ageGroupFrom",
            "in": "query",
            "description": "Enter ageGroupFrom",
            "type": "number",
            "format": "number"
          },
          {
            "name": "ageGroupTo",
            "in": "query",
            "description": "Enter ageGroupTo",
            "type": "number",
            "format": "number"
          },
          {
            "name": "priceFrom",
            "in": "query",
            "description": "Enter priceFrom",
            "type": "number",
            "format": "number"
          },
          {
            "name": "priceTo",
            "in": "query",
            "description": "Enter priceTo",
            "type": "number",
            "format": "number"
          },
          {
            "name": "days",
            "in": "query",
            "description": "Enter multiple days coma separated (sunday,monday)",
            "type": "string",
            "format": "string"
          },
          {
            "name": "latitude",
            "in": "query",
            "description": "Enter latitude in case of near me",
            "type": "string",
            "format": "string"
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "Enter longitude in case of near me",
            "type": "string",
            "format": "string"
          },
          {
            "name": "minDistance",
            "in": "query",
            "description": "Enter minDistance in case of near me ( in meters )",
            "type": "string",
            "format": "string"
          },
          {
            "name": "maxDistance",
            "in": "query",
            "description": "Enter maxDistance in case of near me ( in meters )",
            "type": "string",
            "format": "string"
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Enter Sport id",
            "type": "array",
            "items": {           
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Enter country",
            "type": "string",
            "format": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "Enter state",
            "type": "string",
            "format": "string"
          },
          {
            "name": "city",
            "in": "query",
            "description": "Enter city",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/training/details": {
      "get": {
        "tags": ["User-Training"],
        "summary": "Training details",
        "description": "Get Training details",
        "operationId": "training_details",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "trainingId",
            "in": "query",
            "description": "Enter training id",
            "type": "string",
            "format": "string"
            
          }          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/training/mark-unmark/favourite": {
      "post" : {
        "tags" : ["User-Training"],
        "description" : "Mark favourite or un favourite any particular training",
        "operationId" : "mark_favourite_training",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "trainingId",
            "in" : "formData",
            "description" : "Enter training id which you wnat to mark favourite or unfavourite",
            "type" : "string",
            "required" : true
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/favourite/trainings" : {
      "get" :{
        "tags" : ["User-Training"],
        "description" : "Get your favourite trainings",
        "operationId" : "favourite_trainings",
        "consumes" : ["application/json"],
        "produces" : ["application/json"],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" :{
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/training/get-platformFees": {
      "post" : {
        "tags" : ["User-Training"],
        "description" : "Get platform fees",
        "operationId" : "get_platform_fees",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "trainingId",
            "in" : "formData",
            "description" : "Enter training id",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "startDate",
            "in" : "formData",
            "description" : "Enter Start Date Of Training from where you want book Training",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "endDate",
            "in" : "formData",
            "description" : "Enter Start Date Of Training from where you want book Training",
            "type" : "string",
            "required" : true
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/check/Training/Availability": {
      "post" : {
        "tags" : ["Training-Booking"],
        "description" : "Check Availability of Training",
        "operationId" : "check_availability_training",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "trainingId",
            "in" : "formData",
            "description" : "Enter training id",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "startDate",
            "in" : "formData",
            "description" : "Enter Start Date Of Training from where you want check availability of Training",
            "type" : "string",
            "required" : true
          },
          {
            "name": "days",
            "in": "formData",
            "description": "days [sunday,monday]",
            "required": true,
            "type": "array"            
          },
          {
            "name": "sunday",
            "in": "formData",
            "description": "slots for sunday",
            "required": false,
            "type": "array" 
          },
          {
            "name": "monday",
            "in": "formData",
            "description": "slots for monday (06:00 AM-08:00 AM,08:00 AM-10:00 AM)",
            "required": false,
            "type": "array"
          },
          {
            "name": "tuesday",
            "in": "formData",
            "description": "slots for tuesday",
            "required": false,
            "type": "array" 
          },
          {
            "name": "wednesday",
            "in": "formData",
            "description": "slots for wednesday",
            "required": false,
            "type": "array" 
          },
          {
            "name": "thursday",
            "in": "formData",
            "description": "slots for thursday",
            "required": false,
            "type": "array" 
          },
          {
            "name": "friday",
            "in": "formData",
            "description": "slots for friday",
            "required": false,
            "type": "array"
          },
          {
            "name": "saturday",
            "in": "formData",
            "description": "slots for saturday",
            "required": false,
            "type": "array" 
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/addTraining/to/Cart": {
      "post" : {
        "tags" : ["Training-Booking"],
        "description" : "Add Training To Cart",
        "operationId" : "add_training_to_cart",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "bookingFor",
            "in" : "formData",
            "description" : "Enter for whom you want to book the training (self, family)",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "familyMember",
            "in" : "formData",
            "description" : "Enter familyMember id (in case booking for family member)",
            "type" : "string",
            "required" : false
          },
          {
            "name" : "trainingId",
            "in" : "formData",
            "description" : "Enter training id",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "totalSession",
            "in" : "formData",
            "description" : "Enter total sessions you want to book",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "sessionTimeDuration",
            "in" : "formData",
            "description" : "Enter session time duration of booked sessions",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "pricePerSession",
            "in" : "formData",
            "description" : "Enter price per session",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "totalPrice",
            "in" : "formData",
            "description" : "Enter total price of all the sessions",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "currency",
            "in" : "formData",
            "description" : "Enter currency of price of session",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "startDate",
            "in" : "formData",
            "description" : "Enter Start Date Of Training from where you want book Training",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "endDate",
            "in" : "formData",
            "description" : "Enter End Date Of Training Booking",
            "type" : "string",
            "required" : true
          },
          {
            "name": "days",
            "in": "formData",
            "description": "days [sunday,monday]",
            "required": true,
            "type": "array"            
          },
          {
            "name": "sunday",
            "in": "formData",
            "description": "slots for sunday",
            "required": false,
            "type": "array" ,
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "monday",
            "in": "formData",
            "description": "slots for monday ({slot : 06:00 AM-08:00 AM, date  : [2023-08-27, 2023-08-28]})",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "tuesday",
            "in": "formData",
            "description": "slots for tuesday",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "wednesday",
            "in": "formData",
            "description": "slots for wednesday",
            "required": false,
            "type": "array" ,
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "thursday",
            "in": "formData",
            "description": "slots for thursday",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "friday",
            "in": "formData",
            "description": "slots for friday",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "saturday",
            "in": "formData",
            "description": "slots for saturday",
            "required": false,
            "type": "array" ,
            "items": {           
              "type": "object"
            }
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/updateTraining/to/Cart/{cartId}": {
      "post" : {
        "tags" : ["Training-Booking"],
        "description" : "Update Training To Cart",
        "operationId" : "update_training_to_cart",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "cartId",
            "in" : "path",
            "description" : "Enter _id of the cart which you want to update",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "bookingFor",
            "in" : "formData",
            "description" : "Enter for whom you want to book the training (self, family)",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "familyMember",
            "in" : "formData",
            "description" : "Enter familyMember id (in case booking for family member)",
            "type" : "string",
            "required" : false
          },
          {
            "name" : "trainingId",
            "in" : "formData",
            "description" : "Enter training id",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "totalSession",
            "in" : "formData",
            "description" : "Enter total sessions you want to book",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "sessionTimeDuration",
            "in" : "formData",
            "description" : "Enter session time duration of booked sessions",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "pricePerSession",
            "in" : "formData",
            "description" : "Enter price per session",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "totalPrice",
            "in" : "formData",
            "description" : "Enter total price of all the sessions",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "currency",
            "in" : "formData",
            "description" : "Enter currency of price of session",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "startDate",
            "in" : "formData",
            "description" : "Enter Start Date Of Training from where you want book Training",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "endDate",
            "in" : "formData",
            "description" : "Enter End Date Of Training Booking",
            "type" : "string",
            "required" : true
          },
          {
            "name": "days",
            "in": "formData",
            "description": "days [sunday,monday]",
            "required": true,
            "type": "array"            
          },
          {
            "name": "sunday",
            "in": "formData",
            "description": "slots for sunday",
            "required": false,
            "type": "array" ,
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "monday",
            "in": "formData",
            "description": "slots for monday ({slot : 06:00 AM-08:00 AM, date  : [2023-08-27, 2023-08-28]})",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "tuesday",
            "in": "formData",
            "description": "slots for tuesday",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "wednesday",
            "in": "formData",
            "description": "slots for wednesday",
            "required": false,
            "type": "array" ,
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "thursday",
            "in": "formData",
            "description": "slots for thursday",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "friday",
            "in": "formData",
            "description": "slots for friday",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "saturday",
            "in": "formData",
            "description": "slots for saturday",
            "required": false,
            "type": "array" ,
            "items": {           
              "type": "object"
            }
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/get-cartList": {
      "get" : {
        "tags" : ["Training-Booking"],
        "description" : "Update Training To Cart",
        "operationId" : "cart_list",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (training name To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/get-cartDetails/{cartId}": {
      "get" : {
        "tags" : ["Training-Booking"],
        "description" : "Update Training To Cart",
        "operationId" : "cart_details",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name": "cartId",
            "in": "path",
            "description": "Enter Cart Id To Get Details",
            "type": "string",
            "format": "string"
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/book/training": {
      "post" : {
        "tags" : ["Training-Booking"],
        "description" : "Book Training",
        "operationId" : "book_training",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "bookingFor",
            "in" : "formData",
            "description" : "Enter for whom you want to book the training (self, family)",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "familyMember",
            "in" : "formData",
            "description" : "Enter familyMember id (in case booking for family member)",
            "type" : "string",
            "required" : false
          },
          {
            "name" : "trainingId",
            "in" : "formData",
            "description" : "Enter training id",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "totalSession",
            "in" : "formData",
            "description" : "Enter total sessions you want to book",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "sessionTimeDuration",
            "in" : "formData",
            "description" : "Enter session time duration of booked sessions",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "pricePerSession",
            "in" : "formData",
            "description" : "Enter price per session",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "totalPrice",
            "in" : "formData",
            "description" : "Enter total price of all the sessions",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "currency",
            "in" : "formData",
            "description" : "Enter currency of price of session",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "cardToken",
            "in" : "formData",
            "description" : "Enter customer card token generated by stripe",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "customerId",
            "in" : "formData",
            "description" : "Enter customer id generated by create customer api via stripe",
            "type" : "string",
            "required" : false
          },
          {
            "name" : "startDate",
            "in" : "formData",
            "description" : "Enter Start Date Of Training from where you want book Training",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "endDate",
            "in" : "formData",
            "description" : "Enter End Date Of Training Booking",
            "type" : "string",
            "required" : true
          },
          {
            "name": "localCountry",
            "in": "formData",
            "description": "Enter localCountry ( country name get from localcountry timezone like Asia/Yerevan)",
            "required": true,
            "type": "string"       
          },
          {
            "name": "days",
            "in": "formData",
            "description": "days [sunday,monday]",
            "required": true,
            "type": "array"            
          },
          {
            "name": "sunday",
            "in": "formData",
            "description": "slots for sunday",
            "required": false,
            "type": "array" ,
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "monday",
            "in": "formData",
            "description": "slots for monday ({slot : 06:00 AM-08:00 AM, date  : [2023-08-27, 2023-08-28]})",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "tuesday",
            "in": "formData",
            "description": "slots for tuesday",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "wednesday",
            "in": "formData",
            "description": "slots for wednesday",
            "required": false,
            "type": "array" ,
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "thursday",
            "in": "formData",
            "description": "slots for thursday",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "friday",
            "in": "formData",
            "description": "slots for friday",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "saturday",
            "in": "formData",
            "description": "slots for saturday",
            "required": false,
            "type": "array" ,
            "items": {           
              "type": "object"
            }
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/training/get-promotions/{trainingId}": {
      "get" : {
        "tags" : ["Training-Booking"],
        "description" : "Get Promotions List For Particular Training",
        "operationId" : "training_promotion_list",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name": "trainingId",
            "in": "path",
            "description": "Enter Training Id To Get Its Promotions List",
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (promotion name Or PromoCode To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/training/get-promotion-detail/{promotionId}": {
      "get" : {
        "tags" : ["Training-Booking"],
        "description" : "Get Promotion Details",
        "operationId" : "training_promotion_detail",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name": "promotionId",
            "in": "path",
            "description": "Enter Promotion Id To Get Its Detail",
            "type": "string",
            "format": "string"
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/flash/promotion/list": {
      "get" : {
        "tags" : ["Training-Booking"],
        "description" : "Get Flash Promotion List",
        "operationId" : "flash_promotion_list",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name": "country",
            "in": "query",
            "description": "Enter country for which you want to get promotions list",
            "type": "string",
            "format": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "Enter state for which you want to get promotions list",
            "type": "string",
            "format": "string"
          },
          {
            "name": "city",
            "in": "query",
            "description": "Enter city for which you want to get promotions list",
            "type": "string",
            "format": "string"
          },
          {
            "name": "latitude",
            "in": "query",
            "description": "Enter latitude",
            "type": "string",
            "format": "string"
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "Enter longitude",
            "type": "string",
            "format": "string"
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/training/apply/promoCode": {
      "post" : {
        "tags" : ["Training-Booking"],
        "description" : "Apply Promocode",
        "operationId" : "apply_promocode",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "trainingId",
            "in" : "formData",
            "description" : "Enter training Id",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "promotionId",
            "in" : "formData",
            "description" : "Enter promotion Id of the promocode",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "totalSession",
            "in" : "formData",
            "description" : "Enter no of total Sessions",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "sessionTimeDuration",
            "in" : "formData",
            "description" : "Enter sessionTimeDuration",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "pricePerSession",
            "in" : "formData",
            "description" : "Enter price Per Session",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "grandTotalPrice",
            "in" : "formData",
            "description" : "Enter grand Total Price of the sessions",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "currency",
            "in" : "formData",
            "description" : "Enter currency",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "startDate",
            "in" : "formData",
            "description" : "Enter Start Date Of Training from where you want book Training",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "endDate",
            "in" : "formData",
            "description" : "Enter End Date Of Training Booking",
            "type" : "string",
            "required" : true
          },
          {
            "name": "days",
            "in": "formData",
            "description": "days [sunday,monday]",
            "required": true,
            "type": "array"            
          },
          {
            "name": "sunday",
            "in": "formData",
            "description": "slots for sunday",
            "required": false,
            "type": "array" ,
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "monday",
            "in": "formData",
            "description": "slots for monday ({slot : 06:00 AM-08:00 AM, date  : [2023-08-27, 2023-08-28]})",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "tuesday",
            "in": "formData",
            "description": "slots for tuesday",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "wednesday",
            "in": "formData",
            "description": "slots for wednesday",
            "required": false,
            "type": "array" ,
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "thursday",
            "in": "formData",
            "description": "slots for thursday",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "friday",
            "in": "formData",
            "description": "slots for friday",
            "required": false,
            "type": "array",
            "items": {           
              "type": "object"
            }
          },
          {
            "name": "saturday",
            "in": "formData",
            "description": "slots for saturday",
            "required": false,
            "type": "array" ,
            "items": {           
              "type": "object"
            }
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/create/customer": {
      "post" : {
        "tags" : ["Training-Booking"],
        "description" : "Create Customer On Stripe",
        "operationId" : "create_customer",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "name",
            "in" : "formData",
            "description" : "Enter firstName",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "email",
            "in" : "formData",
            "description" : "Enter email",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "city",
            "in" : "formData",
            "description" : "Enter city",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "state",
            "in" : "formData",
            "description" : "Enter state",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "country",
            "in" : "formData",
            "description" : "Enter country",
            "type" : "string",
            "required" : true
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/create/payment-method": {
      "post" : {
        "tags" : ["Training-Booking"],
        "description" : "Create Payment Method On Stripe",
        "operationId" : "create_payment_method",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "cardNumber",
            "in" : "formData",
            "description" : "Enter cardNumber",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "expMonth",
            "in" : "formData",
            "description" : "Enter expiry month",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "expYear",
            "in" : "formData",
            "description" : "Enter expiry year",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "cvc",
            "in" : "formData",
            "description" : "Enter cvc",
            "type" : "string",
            "required" : true
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/confirm/payment": {
      "put" : {
        "tags" : ["Training-Booking"],
        "description" : "Confirm Payment On Stripe",
        "operationId" : "confirm_payment",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "clientSecret",
            "in" : "query",
            "description" : "Enter clientSecret",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "paymentMethodId",
            "in" : "query",
            "description" : "Enter paymentMethodId",
            "type" : "string",
            "required" : true
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/customer/saveCard": {
      "post" : {
        "tags" : ["Training-Booking"],
        "description" : "Save Card On Stripe",
        "operationId" : "save_card",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "customerId",
            "in" : "formData",
            "description" : "Enter customer Id",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "cardToken",
            "in" : "formData",
            "description" : "Enter card Token",
            "type" : "string",
            "required" : true
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/customer/deleteCard/{customerId}/{cardId}": {
      "delete" : {
        "tags" : ["Training-Booking"],
        "description" : "Delete Card On Stripe",
        "operationId" : "delete_card",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "customerId",
            "in" : "path",
            "description" : "Enter customer Id",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "cardId",
            "in" : "path",
            "description" : "Enter card Id",
            "type" : "string",
            "required" : true
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/customer/getCards/list/{customerId}": {
      "get" : {
        "tags" : ["Training-Booking"],
        "description" : "Get list of saved cards of a customer On Stripe",
        "operationId" : "get_cards",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "customerId",
            "in" : "path",
            "description" : "Enter customer Id",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "limit",
            "in" : "query",
            "description" : "Enter limit",
            "type" : "number",
            "required" : true
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/get-trainingBooking/list": {
      "get" : {
        "tags" : ["Training-Booking"],
        "description" : "Get your booked trainings list slot wise",
        "operationId" : "booked_training_list",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (training name To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "familyMember",
            "in": "query",
            "description": "Enter familyMember id to get trainings of particular member",
            "type": "string",
            "format": "string"
          },
          {
            "name": "date",            
            "in": "query",
            "description": "Filter by Training date",
            "required": false,
            "type": "date",
            "format": "date",
            "default": "2023-04-29"
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/get-trainingBooking/details/{bookingId}": {
      "get" : {
        "tags" : ["Training-Booking"],
        "description" : "Get Booking Details",
        "operationId" : "booking_details",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name": "bookingId",
            "in": "path",
            "description": "Enter Booking Id To Get Details",
            "type": "string",
            "format": "string"
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/get-training/bookings/list": {
      "get" : {
        "tags" : ["Training-Booking"],
        "description" : "Get your booked trainings list",
        "operationId" : "booked_training_list_full",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          },
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (training name To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "familyMember",
            "in": "query",
            "description": "Enter familyMember id to get trainings of particular member",
            "type": "string",
            "format": "string"
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/get-training/bookings/details/{bookingId}": {
      "get" : {
        "tags" : ["Training-Booking"],
        "description" : "Get Booking Details",
        "operationId" : "booking_details_full",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name": "bookingId",
            "in": "path",
            "description": "Enter Booking Id To Get Details",
            "type": "string",
            "format": "string"
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/get-syncedTrainingBooking/list": {
      "get" : {
        "tags" : ["Training-Booking"],
        "description" : "Get your booked trainings list for calendar sync",
        "operationId" : "booked_training_list_calendar_sync",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name": "search",
            "in": "query",
            "description": "Enter Search Key (training name To Get Listing Accordingly",
            "type": "string",
            "format": "string"
          },
          {
            "name": "familyMember",
            "in": "query",
            "description": "Enter familyMember id to get trainings of particular member",
            "type": "string",
            "format": "string"
          },
          {
            "name": "date",            
            "in": "query",
            "description": "Filter by Training date",
            "required": false,
            "type": "date",
            "format": "date",
            "default": "2023-04-29"
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/training/get-student/attendence/history": {
      "get": {
        "tags": ["Training-Booking"],
        "summary": "Get attendance history of the particular student in training",
        "description": "Get attendance history of the particular student in training",
        "operationId": "attendance-history",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [ 
          {
            "name": "trainingId",
            "in": "query",
            "description": "Enter training Id",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Enter user Id",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "familyMemberId",
            "in": "query",
            "description": "Enter familyMember Id (If the training is for family member)",
            "required" : false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          }
        ],     
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/training/request/evaluation": {
      "post": {
        "tags": ["Evaluation"],
        "summary": "Request for training evaluation to coach and facility admin",
        "description": "Request for training evaluation to coach and facility admin",
        "operationId": "request-evaluation",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [ 
          {
            "name": "trainingBookingId",
            "in": "formData",
            "description": "Enter training Booking Id (Main _id of training booking table not training booking slot )",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "attendanceRange",
            "in": "formData",
            "description": "Enter attendance range [0, 1, 2] (0 for [0-33% attendance], 1 for [33-66% attendance] ,2 for [66-100% attendance])",
            "required" : true,
            "type": "integer",
            "format": "integer"
          }
        ],     
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/training/evaluations/list/{trainingId}": {
      "get": {
        "tags": ["Evaluation"],
        "summary": "Get evaluation list of the particular student in training",
        "description": "Get evaluation list of the particular student in training",
        "operationId": "evaluation-list",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [ 
          {
            "name": "trainingId",
            "in": "path",
            "description": "Enter training Id",
            "required" : true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Enter user Id",
            "required" : false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "familyMemberId",
            "in": "query",
            "description": "Enter familyMember Id (If the training is for family member)",
            "required" : false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          }
        ],     
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "Authorization": {
              "type": "apiKey",
              "name": "authorization",
              "in": "header"
            }
          }
        ]
      }
    },
    "/api/v1/user/training/post/rating-review": {
      "post" : {
        "tags" : ["Rating-Review"],
        "description" : "Post rating and review for training",
        "operationId" : "post_rating",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "trainingId",
            "in" : "formData",
            "description" : "Enter training Id",
            "type" : "string",
            "required" : true
          },
          {
            "name" : "trainingRating",
            "in" : "formData",
            "description" : "Enter training rating",
            "type" : "number",
            "required" : true
          },
          {
            "name" : "trainingReview",
            "in" : "formData",
            "description" : "Enter training review",
            "type" : "string",
            "required" : false
          },
          {
            "name" : "facilityId",
            "in" : "formData",
            "description" : "Enter facility Id",
            "type" : "string",
            "required" : false
          },
          {
            "name" : "facilityRating",
            "in" : "formData",
            "description" : "Enter facility rating",
            "type" : "number",
            "required" : false
          },
          {
            "name" : "facilityReview",
            "in" : "formData",
            "description" : "Enter facility review",
            "type" : "string",
            "required" : false
          },
          {
            "name" : "coaches",
            "in" : "formData",
            "description" : "Enter coaches array containing id , rating and review ( { id : 278736489999, rating : 3, review : good})",
            "type" : "array",
            "required" : false,
            "items": {           
              "type": "object"
            }
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/training/get-reviewList/{trainingId}": {
      "get" : {
        "tags" : ["Rating-Review"],
        "description" : "Get rating and review list for training",
        "operationId" : "training_rating_list",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters" : [
          {
            "name" : "trainingId",
            "in" : "path",
            "description" : "Enter training Id",
            "type" : "string",
            "required" : true
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          }
        ],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/training/get-recent-view/list": {
      "get" : {
        "tags" : ["Rating-Review"],
        "description" : "Get recently views list for training",
        "operationId" : "recent_views",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/get-notifications/list": {
      "get" : {
        "tags" : ["Notifications"],
        "description" : "Get notifications list",
        "operationId" : "notifications_list",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters": [ 
          {
            "name": "page",
            "in": "query",
            "description": "Enter Page No To Get Listing Accordingly",
            "type": "integer",
            "format": "integer",
            "default": 1
          }
        ],  
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    },
    "/api/v1/user/mark/notification/seen": {
      "put" : {
        "tags" : ["Notifications"],
        "description" : "Mark notifications seen",
        "operationId" : "mark_notifications_seen",
        "consumes" : ["multipart/form-data"],
        "produces" : ["application/json"],
        "parameters": [ 
          {
            "name": "notificationId",
            "in": "formData",
            "description": "Enter notificationId",
            "type": "string",
            "format": "string"
          }
        ],  
        "responses" : {
          "200" :{
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        },
        "security" : [
          {
            "Authorization" : {
              "type" : "apiKey",
              "name" : "Authorization",
              "in" : "header"
            }
          }
        ]

      }
    }

  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "  Enter the token like `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYmQxODM1NzQ0MGZmYjUzMWM5NDE0NCIsImZpcnN0TmFtZSI6Ik1vaGQiLCJtb2JpbGUiOiI5NjkwNzE2MzA5IiwiZGV2aWNlVG9rZW4iOiIxMjM0NTY3OCIsIm5vdGlmaWNhdGlvblN0YXR1cyI6dHJ1ZSwiaWF0IjoxNjczODkxNTk4LCJleHAiOjE3MDU0Mjc1OTh9.uN4d3gbKmDkeBv0fjE94i2Ffwcfwe7ty1ySEnuFrh28` "
    }
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
